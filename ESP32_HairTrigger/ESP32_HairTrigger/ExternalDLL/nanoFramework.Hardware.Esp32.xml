<?xml version="1.0"?>
<doc>
    <assembly>
        <name>nanoFramework.Hardware.Esp32</name>
    </assembly>
    <members>
        <member name="T:nanoFramework.Hardware.Esp32.TouchPadSystemConfig">
            <summary>
            Configuration parameters for 
            </summary>
        </member>
        <member name="P:nanoFramework.Hardware.Esp32.TouchPadSystemConfig.TouchHighVolt">
            <summary>
            Charging voltage threshold of the internal circuit of the touch sensor.
            Default = <see cref="F:nanoFramework.Hardware.Esp32.TouchHighVolt.H2V7"/>
            </summary>
        </member>
        <member name="P:nanoFramework.Hardware.Esp32.TouchPadSystemConfig.TouchLowVolt">
            <summary>
            Discharging voltage threshold of the internal circuit of the touch sensor.
            Default = <see cref="F:nanoFramework.Hardware.Esp32.TouchLowVolt.L0V5"/>
            </summary>
        </member>
        <member name="P:nanoFramework.Hardware.Esp32.TouchPadSystemConfig.TouchVoltAtten">
            <summary>
            High voltage attenuation value (HATTEN).
            Default = <see cref="F:nanoFramework.Hardware.Esp32.TouchVoltAtten.A1V"/>
            </summary>
        </member>
        <member name="P:nanoFramework.Hardware.Esp32.TouchPadSystemConfig.TouchTriggerMode">
            <summary>
            Touchpad interrupt trigger mode
            Default = <see cref="F:nanoFramework.Hardware.Esp32.TouchTriggerMode.TOUCH_TRIGGER_BELOW"/>
            </summary>
        </member>
        <member name="P:nanoFramework.Hardware.Esp32.TouchPadSystemConfig.TouchPadFilterTouchPeriod">
            <summary>
            Touch pad filter calibration period, in ms.
            Default = 10
            </summary>
        </member>
        <member name="P:nanoFramework.Hardware.Esp32.TouchPadSystemConfig.TouchReadMode">
            <summary>
            Determine if the pin value reader should use a filtered or unfiltered datastream.
            Default: unfiltered
            </summary>
        </member>
        <member name="T:nanoFramework.Hardware.Esp32.TouchFsmMode">
            <summary>
            The touch pad sensing process is under the control of a hardware-implemented finite-state machine 
            (FSM) which is initiated by software or a dedicated hardware timer.
            </summary>
            <remarks>
            Corresponds to touch_fsm_mode_t
            https://docs.espressif.com/projects/esp-idf/en/release-v4.2/esp32s2/api-reference/peripherals/touch_pad.html#_CPPv416touch_fsm_mode_t
            </remarks>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.TouchFsmMode.Timer">
            <summary>
            To start touch FSM by timer
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.TouchFsmMode.Software">
            <summary>
            To start touch FSM by software trigger
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.TouchFsmMode.Max">
            <summary>
            No source documentation available
            </summary>
        </member>
        <member name="T:nanoFramework.Hardware.Esp32.TouchHighVolt">
            <summary>
            Touch sensor high reference voltage
            </summary>
            <remarks>
            Corresponds to touch_high_volt_t
            https://docs.espressif.com/projects/esp-idf/en/release-v4.2/esp32s2/api-reference/peripherals/touch_pad.html#_CPPv417touch_high_volt_t
            </remarks>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.TouchHighVolt.Keep">
             <summary>
            Touch sensor high reference voltage, no change 
             </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.TouchHighVolt.H2V4">
            <summary>
            Touch sensor high reference voltage, 2.4V
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.TouchHighVolt.H2V5">
            <summary>
            Touch sensor high reference voltage, 2.5V
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.TouchHighVolt.H2V6">
            <summary>
             Touch sensor high reference voltage, 2.6V
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.TouchHighVolt.H2V7">
            <summary>
             Touch sensor high reference voltage, 2.7V
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.TouchHighVolt.Max">
            <summary>
            No source documentation available
            </summary>
        </member>
        <member name="T:nanoFramework.Hardware.Esp32.TouchLowVolt">
            <summary>
            Touch sensor low reference voltage
            </summary>
            <remarks>
            Corresponds to touch_low_volt_t
            https://docs.espressif.com/projects/esp-idf/en/release-v4.2/esp32s2/api-reference/peripherals/touch_pad.html#_CPPv416touch_low_volt_t
            </remarks>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.TouchLowVolt.Keep">
            <summary>
            Touch sensor low reference voltage, no change
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.TouchLowVolt.L0V5">
            <summary>
            Touch sensor low reference voltage, 0.5V
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.TouchLowVolt.L0V6">
            <summary>
            Touch sensor low reference voltage, 0.6V
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.TouchLowVolt.L0V7">
            <summary>
            Touch sensor low reference voltage, 0.7V
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.TouchLowVolt.L0V8">
            <summary>
            Touch sensor low reference voltage, 0.8V
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.TouchLowVolt.Max">
            <summary>
            No source documentation available
            </summary>
        </member>
        <member name="T:nanoFramework.Hardware.Esp32.TouchPinSelectMode">
            <summary>
            Determine if the TouchPad pin input is selected by the raw GPIO pin number or the touch pad index
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.TouchPinSelectMode.GpioIndex">
            <summary>
            Select TouchPad pin by its raw GPIO value.
            The available touch GPIO pins are 0, 2, 4, 12, 13, 14, 15, 27, 32, 33
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.TouchPinSelectMode.TouchIndex">
            <summary>
            Select TouchPad pin by its touch pin index.
            The available indexes are 0-9
            </summary>
        </member>
        <member name="T:nanoFramework.Hardware.Esp32.TouchTriggerMode">
            <summary>
            The mode used to trigger touch interrupts
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.TouchTriggerMode.TOUCH_TRIGGER_BELOW">
            <summary>
            Touch interrupt will happen if counter value is less than threshold.
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.TouchTriggerMode.TOUCH_TRIGGER_ABOVE">
            <summary>
            Touch interrupt will happen if counter value is larger than threshold.
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.TouchTriggerMode.TOUCH_TRIGGER_MAX">
            <summary>
            No source documentation available
            </summary>
        </member>
        <member name="T:nanoFramework.Hardware.Esp32.TouchPad">
            <summary>
            Base class for touch pad sensors: interrupt or polling driven
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.TouchPad._gpioTouchPadArr">
            <summary>
            Map of GPIO to touch pad number.
            ESP32 offers up to 10 capacitive IOs that detect changes in capacitance on touch sensors due to finger contact or proximity.
            Index is the Touch pin number, value is the raw GPIO pin number
            </summary>
            <remarks>
            This works on ESP32, but not ESP32-S2 (different mapping)
            TODO: resolve the pinmap issue
            See this link: https://docs.espressif.com/projects/esp-idf/en/latest/esp32/api-reference/peripherals/touch_pad.html#_CPPv411touch_pad_t
            </remarks>
        </member>
        <member name="E:nanoFramework.Hardware.Esp32.TouchPad.ValueChanged">
            <summary>
            Event triggered when the touchpad value changes
            </summary>
        </member>
        <member name="P:nanoFramework.Hardware.Esp32.TouchPad.GpioPinNumber">
            <summary>
            The selected pin as raw GPIO pin number
            </summary>
        </member>
        <member name="P:nanoFramework.Hardware.Esp32.TouchPad.TouchPadIndex">
            <summary>
            The selected pin as touch pin index
            </summary>
        </member>
        <member name="M:nanoFramework.Hardware.Esp32.TouchPad.#ctor(nanoFramework.Hardware.Esp32.TouchPadController,System.Int32,nanoFramework.Hardware.Esp32.TouchPadConfig)">
            <summary>
            Constructs and initializes object based on given configuration.
            </summary>
            <param name="Controller">Parent touch controller</param>
            <param name="PinNumber">A valid touch pad pin</param>
            <param name="config">Touchpad configuration object.  Changes to the config will have no effect on constructed objects</param>
            <exception cref="T:System.ArgumentException">Invalid touchpad pin number</exception>
            <exception cref="T:System.ArgumentNullException">Configuration parameter is null</exception>
            <exception cref="T:System.Exception">One of native calls returned not OK return value.</exception>
        </member>
        <member name="M:nanoFramework.Hardware.Esp32.TouchPad.Init">
            <summary>
            Initialize native touchpad
            </summary>
        </member>
        <member name="M:nanoFramework.Hardware.Esp32.TouchPad.SetTouchPadTriggerThreshold(System.Single)">
            <summary>
            Sets touch pad interrupt threshold.
            </summary>
            <exception cref="T:System.Exception">Native call returned not OK return value.</exception>
        </member>
        <member name="M:nanoFramework.Hardware.Esp32.TouchPad.IsTouched">
            <summary>
            Check if the touchpad value indicates a touch.
            Uses Read() with respect for the touch threshhold and <see cref="P:nanoFramework.Hardware.Esp32.TouchPadSystemConfig.TouchTriggerMode"/>
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException">Invalid TouchTriggerMode set in config</exception>
        </member>
        <member name="M:nanoFramework.Hardware.Esp32.TouchPad.Read">
            <summary>
            Read current sensor value using the preferred read mode set in the configuration.
            </summary>
            <returns></returns>
            <remarks>
            if unfiltered => NativeTouchPadRead,
            if filtered => NativeTouchPadReadFiltered
            </remarks>
            <exception cref="T:System.NotImplementedException">Config.ReadMode is set to an unsupported value</exception>
        </member>
        <member name="M:nanoFramework.Hardware.Esp32.TouchPad.ReadRaw">
            <summary>
            Read current raw sensor data using the preferred API.
            If filtering is disabled, this function is identical to <see cref="M:nanoFramework.Hardware.Esp32.TouchPad.Read"/>
            </summary>
            <returns></returns>
            <remarks>
            if unfiltered => NativeTouchPadRead,
            if filtered => NativeTouchPadReadRawData
            </remarks>
            <exception cref="T:System.NotImplementedException">Config.ReadMode is set to an unsupported value</exception>
        </member>
        <member name="M:nanoFramework.Hardware.Esp32.TouchPad.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="M:nanoFramework.Hardware.Esp32.TouchPad.NativeTouchPadConfig(System.Int32,System.UInt16)">
            <summary>
            Configure touch pad interrupt threshold.
            </summary>
            <remarks>
            esp_err_t touch_pad_config(touch_pad_ttouch_num, uint16_t threshold)
            https://docs.espressif.com/projects/esp-idf/en/latest/esp32/api-reference/peripherals/touch_pad.html#_CPPv416touch_pad_config11touch_pad_t8uint16_t
            </remarks>
            <param name="touchPadIndex">Touch pad index</param>
            <param name="threshold">Interrupt threshold,</param>
            <returns>True if successful</returns>
        </member>
        <member name="M:nanoFramework.Hardware.Esp32.TouchPad.NativeTouchPadRead(System.Int32)">
            <summary>
            Get touch sensor counter value. 
            Each touch sensor has a counter to count the number of charge/discharge cycles. 
            When the pad is not ‘touched’, we can get a number of the counter. 
            When the pad is ‘touched’, the value in counter will get smaller because of the larger equivalent capacitance.
            </summary>
            <remarks>
            esp_err_t touch_pad_read(touch_pad_ttouch_num, uint16_t* touch_value)
            https://docs.espressif.com/projects/esp-idf/en/latest/esp32/api-reference/peripherals/touch_pad.html#_CPPv414touch_pad_read11touch_pad_tP8uint16_t
            </remarks>
            <param name="touchPadIndex">Touch pad index</param>
            <returns>Touch sensor value</returns>
        </member>
        <member name="M:nanoFramework.Hardware.Esp32.TouchPad.NativeTouchPadReadFiltered(System.Int32)">
            <summary>
            Get filtered touch sensor counter value by IIR filter.
            touch_pad_filter_start has to be called before calling touch_pad_read_filtered. This function can be called from ISR
            </summary>
            <remarks>
            esp_err_t touch_pad_read_filtered(touch_pad_ttouch_num, uint16_t *touch_value)
            https://docs.espressif.com/projects/esp-idf/en/latest/esp32/api-reference/peripherals/touch_pad.html#_CPPv423touch_pad_read_filtered11touch_pad_tP8uint16_t
            
            touch_pad_filter_start has to be called before calling touch_pad_read_filtered. This function can be called from ISR
            </remarks>
            <param name="touchPadIndex">Touch pad index</param>
            <returns>Touch sensor value</returns>
        </member>
        <member name="M:nanoFramework.Hardware.Esp32.TouchPad.NativeTouchPadReadRawData(System.Int32)">
            <summary>
            Get raw data (touch sensor counter value) from IIR filter process. Need not request hardware measurements.
            </summary>
            <remarks>
            esp_err_t touch_pad_read_raw_data(touch_pad_ttouch_num, uint16_t *touch_value)
            https://docs.espressif.com/projects/esp-idf/en/latest/esp32/api-reference/peripherals/touch_pad.html#_CPPv423touch_pad_read_raw_data11touch_pad_tP8uint16_t
            
            touch_pad_filter_start has to be called before calling touch_pad_read_raw_data. This function can be called from ISR
            </remarks>
            <param name="touchPadIndex"></param>
            <returns></returns>
        </member>
        <member name="M:nanoFramework.Hardware.Esp32.TouchPad.NativeTouchPadSetThresh(System.Int32,System.UInt16)">
            <summary>
            Set touch sensor interrupt threshold.
            </summary>
            <remarks>
            esp_err_t touch_pad_set_thresh(touch_pad_ttouch_num, uint16_t threshold)
            https://docs.espressif.com/projects/esp-idf/en/latest/esp32/api-reference/peripherals/touch_pad.html#_CPPv420touch_pad_set_thresh11touch_pad_t8uint16_t
            </remarks>
            <param name="touchPadIndex">Touch pad index</param>
            <param name="threshold">Threshold of touchpad count, refer to touch_pad_set_trigger_mode to see how to set trigger mode.</param>
            <returns>True if successful</returns>
        </member>
        <member name="T:nanoFramework.Hardware.Esp32.TouchPadConfig">
            <summary>
            Configuration parameters for individual touchpad objects
            </summary>
        </member>
        <member name="P:nanoFramework.Hardware.Esp32.TouchPadConfig.TouchThreshNoUse">
            <summary>
            Interrupt threshold.
            Default = 0
            </summary>
        </member>
        <member name="P:nanoFramework.Hardware.Esp32.TouchPadConfig.PinSelectMode">
            <summary>
            Select the method in which pins are indexed.
            Pins can be indexed by GPIO number or touch index
            </summary>
        </member>
        <member name="P:nanoFramework.Hardware.Esp32.TouchPadConfig.InterruptThresholdValue">
            <summary>
            The threshold to trigger interrupt when the pad is touched.
            Sensor value must be greater than this value to trigger an interrupt
            </summary>
            <remarks>
            By default, use 2/3 of read value as the threshold to trigger interrupt when the pad is touched.
            </remarks>
        </member>
        <member name="T:nanoFramework.Hardware.Esp32.TouchPadReadMode">
            <summary>
            Determine touch pad value read mode for polling applications
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.TouchPadReadMode.Unfiltered">
            <summary>
            Read raw sensor values.  Used to select touch_pad_read
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.TouchPadReadMode.Filtered">
            <summary>
            Read filtered sensor values.  Used to select touch_pad_read_raw_data
            </summary>
        </member>
        <member name="T:nanoFramework.Hardware.Esp32.TouchVoltAtten">
            <summary>
            Touch sensor high reference voltage attenuation
            </summary>
            <remarks>
            Corresponds to touch_volt_atten_t
            https://docs.espressif.com/projects/esp-idf/en/release-v4.2/esp32s2/api-reference/peripherals/touch_pad.html#_CPPv418touch_volt_atten_t
            </remarks>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.TouchVoltAtten.Keep">
            <summary>
            Touch sensor high reference voltage attenuation, no change
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.TouchVoltAtten.A1V5">
            <summary>
            Touch sensor high reference voltage attenuation, 1.5V attenuation
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.TouchVoltAtten.A1V">
            <summary>
            Touch sensor high reference voltage attenuation, 1V attenuation
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.TouchVoltAtten.A0V5">
            <summary>
            Touch sensor high reference voltage attenuation, 0.5V attenuation
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.TouchVoltAtten.A0V">
            <summary>
            Touch sensor high reference voltage attenuation, 0V attenuation
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.TouchVoltAtten.Max">
            <summary>
            No source documentation available
            </summary>
        </member>
        <member name="T:nanoFramework.Hardware.Esp32.TouchPadController">
            <summary>
            Touchpad subsystem manager.
            Synchronizes pin access and event handling.
            Use a singleton instance for best results.
            </summary>
        </member>
        <member name="P:nanoFramework.Hardware.Esp32.TouchPadController.Config">
            <summary>
            TouchPad system configuration
            </summary>
        </member>
        <member name="M:nanoFramework.Hardware.Esp32.TouchPadController.#ctor(nanoFramework.Hardware.Esp32.TouchPadSystemConfig)">
            <summary>
            Create new instance
            </summary>
            <param name="Config"></param>
        </member>
        <member name="M:nanoFramework.Hardware.Esp32.TouchPadController.Init">
            <summary>
            Initialize the native touchpad featureset
            </summary>
        </member>
        <member name="M:nanoFramework.Hardware.Esp32.TouchPadController.RegisterTouchpadHandler(System.Int32,System.Action)">
            <summary>
            Register a command to be invoked when a touchpad interupt is triggered
            </summary>
            <param name="touchPadIndex"></param>
            <param name="handler"></param>
        </member>
        <member name="M:nanoFramework.Hardware.Esp32.TouchPadController.DeregisterTouchpadHandler(System.Int32,System.Action)">
            <summary>
            Deregister a command to be invoked when a touchpad interupt is triggered
            </summary>
            <param name="touchPadIndex"></param>
            <param name="handler"></param>
        </member>
        <member name="M:nanoFramework.Hardware.Esp32.TouchPadController.TouchPadSetTriggerMode(nanoFramework.Hardware.Esp32.TouchTriggerMode)">
            <summary>
            Set touchpad interrupt trigger mode
            </summary>
            <param name="mode"></param>
        </member>
        <member name="M:nanoFramework.Hardware.Esp32.TouchPadController.OpenPin(System.Int32,nanoFramework.Hardware.Esp32.TouchPadConfig)">
            <summary>
            Initialize pin and return reference.  To close the pin, call <see cref="M:nanoFramework.Hardware.Esp32.TouchPad.Dispose"/>
            </summary>
            <param name="PinNumber">A valid touch pad pin index. This could be either GPIO or touch index depending on config</param>
            <param name="config">Touchpad configuration object.  Changes to the config will have no effect on constructed objects</param>
            <returns></returns>
        </member>
        <member name="M:nanoFramework.Hardware.Esp32.TouchPadController.IsPinOpen(System.Int32)">
            <summary>
            Determine if a pin is currently marked as open
            </summary>
            <param name="touchPadIndex"></param>
            <returns></returns>
        </member>
        <member name="M:nanoFramework.Hardware.Esp32.TouchPadController.Finalize">
            <summary>
            Disposable pattern destructor
            </summary>
        </member>
        <member name="M:nanoFramework.Hardware.Esp32.TouchPadController.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:nanoFramework.Hardware.Esp32.TouchPadController.NativeTouchPadInit">
            <summary>
            No source documentation available
            </summary>
            <remarks>
            esp_err_t touch_pad_init() 
            https://docs.espressif.com/projects/esp-idf/en/latest/api-reference/peripherals/touch_pad.html#_CPPv414touch_pad_initv
            </remarks>
            <returns>True if successful</returns>
        </member>
        <member name="M:nanoFramework.Hardware.Esp32.TouchPadController.NativeTouchPadDeinit">
            <summary>
            No source documentation available
            </summary>
            <remarks>
            esp_err_t touch_pad_deinit() 
            https://docs.espressif.com/projects/esp-idf/en/latest/esp32/api-reference/peripherals/touch_pad.html#_CPPv416touch_pad_deinitv
            </remarks>
            <returns>True if successful</returns>
        </member>
        <member name="M:nanoFramework.Hardware.Esp32.TouchPadController.NativeTouchPadSetFsmMode(nanoFramework.Hardware.Esp32.TouchFsmMode)">
            <summary>
            Set touch sensor FSM mode, the test action can be triggered by the timer, as well as by the software.
            </summary>
            <remarks>
            esp_err_t touch_pad_set_fsm_mode(touch_fsm_mode_tmode) 
            https://docs.espressif.com/projects/esp-idf/en/latest/api-reference/peripherals/touch_pad.html#_CPPv422touch_pad_set_fsm_mode16touch_fsm_mode_t
            </remarks>
            <param name="touchFsmMode">FSM mode</param>
            <returns>True if successful</returns>
        </member>
        <member name="M:nanoFramework.Hardware.Esp32.TouchPadController.NativeTouchPadSetVoltage(nanoFramework.Hardware.Esp32.TouchHighVolt,nanoFramework.Hardware.Esp32.TouchLowVolt,nanoFramework.Hardware.Esp32.TouchVoltAtten)">
            <summary>
            Set touch sensor high voltage threshold of change. 
            The touch sensor measures the channel capacitance value by charging and discharging the channel.
            So the high threshold should be less than the supply voltage.
            </summary>
            <remarks>
            esp_err_t touch_pad_set_voltage(touch_high_volt_trefh, touch_low_volt_trefl, touch_volt_atten_tatten)
            https://docs.espressif.com/projects/esp-idf/en/latest/esp32/api-reference/peripherals/touch_pad.html#_CPPv421touch_pad_set_voltage17touch_high_volt_t16touch_low_volt_t18touch_volt_atten_t
            </remarks>
            <param name="touchHighVolt">The value of DREFH</param>
            <param name="touchLowVolt">The value of DREFL</param>
            <param name="touchVoltAtten">The attenuation on DREFH</param>
            <returns></returns>
        </member>
        <member name="M:nanoFramework.Hardware.Esp32.TouchPadController.NativeTouchPadSetTriggerMode(nanoFramework.Hardware.Esp32.TouchTriggerMode)">
            <summary>
            Set touch sensor interrupt trigger mode. Interrupt can be triggered either when counter result is less than threshold or when counter result is more than threshold.
            </summary>
            <param name="mode">pointer to accept touch sensor interrupt trigger mode</param>
            <remarks>
            esp_err_t touch_pad_set_trigger_mode(touch_trigger_mode_tmode)
            https://docs.espressif.com/projects/esp-idf/en/latest/esp32/api-reference/peripherals/touch_pad.html#_CPPv426touch_pad_set_trigger_mode20touch_trigger_mode_t
            </remarks>
            <returns></returns>
        </member>
        <member name="M:nanoFramework.Hardware.Esp32.TouchPadController.NativeTouchPadFilterStart(System.UInt32)">
            <summary>
            Start touch pad filter function This API will start a filter to process the noise in order to prevent false triggering when detecting slight change of capacitance. 
            Need to call touch_pad_filter_start before all touch filter APIs
            </summary>
            <remarks>
            esp_err_t touch_pad_filter_start(uint32_t filter_period_ms)
            https://docs.espressif.com/projects/esp-idf/en/latest/esp32/api-reference/peripherals/touch_pad.html#_CPPv422touch_pad_filter_start8uint32_t
            </remarks>
            <param name="FilterPeriod">filter calibration period, in ms</param>
            <returns>True if successful</returns>
        </member>
        <member name="M:nanoFramework.Hardware.Esp32.TouchPadController.NativeTouchPadSetFilterPeriod(System.UInt32)">
            <summary>
            Set touch pad filter calibration period, in ms. Need to call touch_pad_filter_start before all touch filter APIs
            </summary>
            <remarks>
            esp_err_t touch_pad_set_filter_period(uint32_t new_period_ms)
            https://docs.espressif.com/projects/esp-idf/en/latest/esp32/api-reference/peripherals/touch_pad.html#_CPPv427touch_pad_set_filter_period8uint32_t
            </remarks>
            <param name="newPeriodMs">Filter period, in ms</param>
            <returns>True if successful</returns>
        </member>
        <member name="M:nanoFramework.Hardware.Esp32.TouchPadController.NativeTouchPadFilterStop">
            <summary>
            Stop touch pad filter function Need to call touch_pad_filter_start before all touch filter APIs
            </summary>
            <remarks>
            esp_err_t touch_pad_filter_stop(void)
            https://docs.espressif.com/projects/esp-idf/en/latest/esp32/api-reference/peripherals/touch_pad.html#_CPPv421touch_pad_filter_stopv
            </remarks>
            <returns></returns>
        </member>
        <member name="M:nanoFramework.Hardware.Esp32.TouchPadController.NativeTouchPadEnableInterrupts">
            <summary>
            To enable touch pad interrupt.
            </summary>
            <remarks>
            esp_err_t touch_pad_intr_enable(void)
            https://docs.espressif.com/projects/esp-idf/en/latest/esp32/api-reference/peripherals/touch_pad.html#_CPPv421touch_pad_intr_enablev
            </remarks>
            <returns></returns>
        </member>
        <member name="M:nanoFramework.Hardware.Esp32.TouchPadController.NativeTouchPadDisableInterrupts">
            <summary>
            To disable touch pad interrupt.
            </summary>
            <remarks>
            esp_err_t touch_pad_intr_disable(void)
            https://docs.espressif.com/projects/esp-idf/en/latest/esp32/api-reference/peripherals/touch_pad.html#_CPPv422touch_pad_intr_disablev
            </remarks>
            <returns></returns>
        </member>
        <member name="M:nanoFramework.Hardware.Esp32.TouchPadController.NativeTouchPadClearInterrupts">
            <summary>
            To clear touch pad interrupt.
            </summary>
            <remarks>
            esp_err_t touch_pad_intr_clear
            https://docs.espressif.com/projects/esp-idf/en/latest/esp32/api-reference/peripherals/touch_pad.html#_CPPv420touch_pad_intr_clearv
            </remarks>
            <returns></returns>
        </member>
        <member name="M:nanoFramework.Hardware.Esp32.TouchPadController.NativeTouchPadIsrRegister(System.Action)">
            <summary>
            Register touch-pad ISR. The handler will be attached to the same CPU core that this function is running on.
            </summary>
            <remarks>
            esp_err_t touch_pad_isr_register(intr_handler_tfn, void* arg)
            https://docs.espressif.com/projects/esp-idf/en/latest/esp32/api-reference/peripherals/touch_pad.html#_CPPv422touch_pad_isr_register14intr_handler_tPv
            </remarks>
            <param name="Callback">The callback function to register</param>
            <returns>True if successful</returns>
        </member>
        <member name="M:nanoFramework.Hardware.Esp32.TouchPadController.NativeTouchPadIsrDeregister(System.Action)">
            <summary>
            Deregister the handler previously registered using touch_pad_isr_handler_register.
            </summary>
            <remarks>
            touch_pad_isr_deregister(void (*fn)(void *), void *arg)
            https://docs.espressif.com/projects/esp-idf/en/latest/esp32/api-reference/peripherals/touch_pad.html#_CPPv424touch_pad_isr_deregisterPFvPvEPv
            </remarks>
            <param name="Callback">The callback function to unregister</param>
            <returns></returns>
        </member>
        <member name="M:nanoFramework.Hardware.Esp32.TouchPadController.NativeTouchpadGetStatus">
            <summary>
            Get the touch sensor channel active status mask.
            The bit position represents the channel number. 
            The 0/1 status of the bit represents the trigger status.
            </summary>
            <remarks>
            uint32_t touch_pad_get_status(void)
            https://docs.espressif.com/projects/esp-idf/en/latest/esp32/api-reference/peripherals/touch_pad.html#_CPPv420touch_pad_get_statusv
            </remarks>
            <returns></returns>
        </member>
        <member name="M:nanoFramework.Hardware.Esp32.TouchPadController.NativeTouchpadClearStatus">
            <summary>
            To clear the touch sensor channel active status.
            </summary>
            <remarks>
            esp_err_t touch_pad_clear_status(void)
            https://docs.espressif.com/projects/esp-idf/en/latest/esp32/api-reference/peripherals/touch_pad.html#_CPPv422touch_pad_clear_statusv
            </remarks>
            <returns></returns>
        </member>
        <member name="M:nanoFramework.Hardware.Esp32.TouchPadController.NativeDispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="T:nanoFramework.Hardware.Esp32.TouchPadValueChangedEventHandler">
            <summary>
            Event raised when TouchPad value changes
            </summary>
            <param name="sender"></param>
            <param name="value"></param>
        </member>
        <member name="T:nanoFramework.Hardware.Esp32.Gpio">
            <summary>
            ESP32 GPIO pins
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Gpio.IO00">
            <summary>
            Gpio IO00
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Gpio.IO01">
            <summary>
            Gpio IO01 (UART0 TXD)
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Gpio.IO02">
            <summary>
            Gpio IO02
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Gpio.IO03">
            <summary>
            Gpio IO03 (UART0 RXD)
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Gpio.IO04">
            <summary>
            Gpio IO04
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Gpio.IO05">
            <summary>
            Gpio IO05
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Gpio.IO06">
            <summary>
            Gpio IO06 (Reserved for SPI flash)
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Gpio.IO07">
            <summary>
            Gpio IO07 (Reserved for SPI flash)
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Gpio.IO08">
            <summary>
            Gpio IO08 (Reserved for SPI flash)
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Gpio.IO09">
            <summary>
            Gpio IO09 (Reserved for SPI flash)
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Gpio.IO10">
            <summary>
            Gpio IO10 (Reserved for SPI flash)
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Gpio.IO11">
            <summary>
            Gpio IO11 (Reserved for SPI flash)
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Gpio.IO12">
            <summary>
            Gpio IO12  (also used for JTAG TDI)
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Gpio.IO13">
            <summary>
            Gpio IO13  (also used for JTAG TCK)
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Gpio.IO14">
            <summary>
            Gpio IO14  (also used for JTAG TMS)
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Gpio.IO15">
            <summary>
            Gpio IO15  (also used for JTAG TDO)
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Gpio.IO16">
            <summary>
            Gpio IO16
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Gpio.IO17">
            <summary>
            Gpio IO17
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Gpio.IO18">
            <summary>
            Gpio IO18
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Gpio.IO19">
            <summary>
            Gpio IO19
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Gpio.IO20">
            <summary>
            Gpio IO20, No Physical pin for IO20
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Gpio.IO21">
            <summary>
            Gpio IO21
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Gpio.IO22">
            <summary>
            Gpio IO22
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Gpio.IO23">
            <summary>
            Gpio IO23
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Gpio.IO24">
            <summary>
            Gpio IO24, No Physical pin for IO24
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Gpio.IO25">
            <summary>
            Gpio IO25
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Gpio.IO26">
            <summary>
            Gpio IO26
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Gpio.IO27">
            <summary>
            Gpio IO27
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Gpio.IO28">
            <summary>
            Gpio IO28, No Physical pin for IO28
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Gpio.IO29">
            <summary>
            Gpio IO29, No Physical pin for IO29
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Gpio.IO30">
            <summary>
            Gpio IO30, No Physical pin for IO30
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Gpio.IO31">
            <summary>
            Gpio IO31, No Physical pin for IO31
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Gpio.IO32">
            <summary>
            Gpio IO32
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Gpio.IO33">
            <summary>
            Gpio IO33
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Gpio.IO34">
            <summary>
            Gpio IO34 (Input Only, no software pullup/pulldown functions)
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Gpio.IO35">
            <summary>
            Gpio IO35 (Input Only, no software pullup/pulldown functions)
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Gpio.IO36">
            <summary>
            Gpio IO36 SENSOR_VP (Input Only, no software pullup/pulldown functions)
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Gpio.IO37">
            <summary>
            Gpio IO37 (Input Only, no software pullup/pulldown functions)
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Gpio.IO38">
            <summary>
            Gpio IO38 (Input Only, no software pullup/pulldown functions)
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Gpio.IO39">
            <summary>
            Gpio IO39 SENSOR_VN (Input Only, no software pullup/pulldown functions)
            </summary>
        </member>
        <member name="M:nanoFramework.Hardware.Esp32.HighResEventListener.OnEvent(nanoFramework.Runtime.Events.BaseEvent)">
            <summary>
            Fire event on correct timer
            </summary>
            <param name="ev"></param>
            <returns></returns>
        </member>
        <member name="M:nanoFramework.Hardware.Esp32.HighResEventListener.ProcessEvent(System.UInt32,System.UInt32,System.DateTime)">
            <summary>
            Process an event
            </summary>
            <param name="data1"></param>
            <param name="data2"></param>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="T:nanoFramework.Hardware.Esp32.HighResTimerExpiredEventHandler">
            <summary>
            Event raised when a High res timer expires. 
            </summary>
        </member>
        <member name="T:nanoFramework.Hardware.Esp32.HighResTimer">
            <summary>
            The class encapsulates the ESP32 High Resolution Timer API.
            </summary>
        </member>
        <member name="E:nanoFramework.Hardware.Esp32.HighResTimer.OnHighResTimerExpired">
            <summary>
            Event raised when a HighRes timer expires.  
            </summary>
        </member>
        <member name="M:nanoFramework.Hardware.Esp32.HighResTimer.GetCurrent">
            <summary>
            Returns the number of micro seconds since boot
            </summary>
            <returns></returns>
        </member>
        <member name="M:nanoFramework.Hardware.Esp32.HighResTimer.#ctor">
            <summary>
            Create a High Resolution Timer. A maximum of 10 timers can be created.
            </summary>
        </member>
        <member name="M:nanoFramework.Hardware.Esp32.HighResTimer.Stop">
            <summary>
            Stop the Timer.
            </summary>
        </member>
        <member name="M:nanoFramework.Hardware.Esp32.HighResTimer.StartOneShot(System.UInt64)">
            <summary>
            Start a one shot timer.
            Once the timer has expired the timer event will be fired.
            </summary>
            <param name="timeout_us">Timeout in mirco seconds</param>
        </member>
        <member name="M:nanoFramework.Hardware.Esp32.HighResTimer.StartOnePeriodic(System.UInt64)">
            <summary>
            Start a periodic timer.
            </summary>
            <param name="period_us">Period between firing timer events.</param>
            <returns></returns>
        </member>
        <member name="M:nanoFramework.Hardware.Esp32.HighResTimer.Dispose(System.Boolean)">
            <summary>
            Dispose(bool disposing)
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:nanoFramework.Hardware.Esp32.HighResTimer.Finalize">
            <summary>
            Finalizer
            </summary>
        </member>
        <member name="M:nanoFramework.Hardware.Esp32.HighResTimer.Dispose">
            <summary>
            Dispose HighResTimer
            </summary>
        </member>
        <member name="T:nanoFramework.Hardware.Esp32.Logging">
            <summary>
            Controls the logging output.
            By default the logging is LOG_LEVEL_NONE as the same port is used for the Visual Studio debug connection when connected via serial port.
            </summary>
        </member>
        <member name="T:nanoFramework.Hardware.Esp32.Logging.LogLevel">
            <summary>
            Enumeration of Log levels
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Logging.LogLevel.LOG_LEVEL_NONE">
            <summary>
            No log output 
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Logging.LogLevel.LOG_LEVEL_ERROR">
            <summary>
            Critical errors, software module can not recover on its own 
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Logging.LogLevel.LOG_LEVEL_WARN">
            <summary>
            Error conditions from which recovery measures have been taken 
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Logging.LogLevel.LOG_LEVEL_INFO">
            <summary>
            Information messages which describe normal flow of events 
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Logging.LogLevel.LOG_LEVEL_DEBUG">
            <summary>
            Extra information which is not necessary for normal use (values, pointers, sizes, etc). 
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Logging.LogLevel.LOG_LEVEL_VERBOSE">
            <summary>
            Bigger chunks of debugging information, or frequent messages which can potentially flood the output. 
            </summary>
        </member>
        <member name="M:nanoFramework.Hardware.Esp32.Logging.SetLogLevel(nanoFramework.Hardware.Esp32.Logging.LogLevel)">
            <summary>
            Set overall logging level.
            </summary>
            <param name="level"></param>
        </member>
        <member name="M:nanoFramework.Hardware.Esp32.Logging.SetLogLevel(System.String,nanoFramework.Hardware.Esp32.Logging.LogLevel)">
            <summary>
             Set overall logging level for specific tag, tag "*" equals all tags.
            </summary>
            <param name="tag"></param>
            <param name="level"></param>
        </member>
        <member name="T:nanoFramework.Hardware.Esp32.Configuration">
            <summary>
            Change Configuration
            </summary>
        </member>
        <member name="M:nanoFramework.Hardware.Esp32.Configuration.SetPinFunction(System.Int32,nanoFramework.Hardware.Esp32.DeviceFunction)">
            <summary>
            Set the default function for a GPIO pin.
            </summary>
            <remarks>
            Allows gpio pins to be assigned a device function.
            For example setting the I2C1 data pin to use GPIO pin 17.
            </remarks>
            <param name="pin">The pin number to set against function.</param>
            <param name="value">The device function to be assigned the pin.</param>
        </member>
        <member name="M:nanoFramework.Hardware.Esp32.Configuration.GetFunctionPin(nanoFramework.Hardware.Esp32.DeviceFunction)">
            <summary>
            Returns the current pin number used by a device function.
            </summary>
            <param name="function"></param>
            <returns>The pin number used by device function. If value is -1 then pins is not assigned.</returns>
        </member>
        <member name="T:nanoFramework.Hardware.Esp32.DeviceTypes">
            <summary>
            Device Types
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.DeviceTypes.GPIO">
            <summary>
            GPIO Device type
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.DeviceTypes.SPI">
            <summary>
            SPI Device type
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.DeviceTypes.I2C">
            <summary>
            I2C Device type
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.DeviceTypes.SERIAL">
            <summary>
            SERIAL Device type
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.DeviceTypes.PWM">
            <summary>
            PWM Device type
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.DeviceTypes.ADC">
            <summary>
            ADC Device type
            </summary>
        </member>
        <member name="T:nanoFramework.Hardware.Esp32.DeviceFunction">
            <summary>
            Defines values used to change pin configuration via the GPIO alternate 
            drivemode interface.
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.DeviceFunction.SPI1_MOSI">
            <summary>
            Device function MOSI for SPI1 
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.DeviceFunction.SPI1_MISO">
            <summary>
            Device function MISO for SPI1 
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.DeviceFunction.SPI1_CLOCK">
            <summary>
            Device function CLOCK for SPI1 
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.DeviceFunction.SPI2_MOSI">
            <summary>
            Device function MOSI for SPI2 
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.DeviceFunction.SPI2_MISO">
            <summary>
            Device function MISO for SPI2 
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.DeviceFunction.SPI2_CLOCK">
            <summary>
            Device function CLOCK for SPI2 
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.DeviceFunction.I2C1_DATA">
            <summary>
            Device function DATA for I2C1 
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.DeviceFunction.I2C1_CLOCK">
            <summary>
            Device function CLOCK for I2C1 
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.DeviceFunction.I2C2_DATA">
            <summary>
            Device function DATA for I2C2 
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.DeviceFunction.I2C2_CLOCK">
            <summary>
            Device function CLOCK for I2C2 
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.DeviceFunction.COM1_TX">
            <summary>
            Device function TX data for COM1 
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.DeviceFunction.COM1_RX">
            <summary>
            Device function RX data for COM1 
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.DeviceFunction.COM1_RTS">
            <summary>
            Device function Request to Send(RTS) for COM1 
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.DeviceFunction.COM1_CTS">
            <summary>
            Device function Clear to Send(CTS) for COM1 
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.DeviceFunction.COM2_TX">
            <summary>
            Device function TX data for COM2 
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.DeviceFunction.COM2_RX">
            <summary>
            Device function RX data for COM2 
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.DeviceFunction.COM2_RTS">
            <summary>
            Device function Request to Send(RTS) for COM2 
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.DeviceFunction.COM2_CTS">
            <summary>
            Device function Clear to Send(CTS) for COM2 
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.DeviceFunction.COM3_TX">
            <summary>
            Device function TX data for COM3 
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.DeviceFunction.COM3_RX">
            <summary>
            Device function RX data for COM3 
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.DeviceFunction.COM3_RTS">
            <summary>
            Device function Request to Send(RTS) for COM3 
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.DeviceFunction.COM3_CTS">
            <summary>
            Device function Clear to Send(CTS) for COM3 
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.DeviceFunction.PWM1">
            <summary>
            Device function PWM1 
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.DeviceFunction.PWM2">
            <summary>
            Device function PWM2 
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.DeviceFunction.PWM3">
            <summary>
            Device function PWM3 
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.DeviceFunction.PWM4">
            <summary>
            Device function PWM4 
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.DeviceFunction.PWM5">
            <summary>
            Device function PWM5 
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.DeviceFunction.PWM6">
            <summary>
            Device function PWM6 
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.DeviceFunction.PWM7">
            <summary>
            Device function PWM7 
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.DeviceFunction.PWM8">
            <summary>
            Device function PWM8 
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.DeviceFunction.PWM9">
            <summary>
            Device function PWM9
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.DeviceFunction.PWM10">
            <summary>
            Device function PWM10 
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.DeviceFunction.PWM11">
            <summary>
            Device function PWM11 
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.DeviceFunction.PWM12">
            <summary>
            Device function PWM12 
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.DeviceFunction.PWM13">
            <summary>
            Device function PWM13 
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.DeviceFunction.PWM14">
            <summary>
            Device function PWM14 
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.DeviceFunction.PWM15">
            <summary>
            Device function PWM15 
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.DeviceFunction.PWM16">
            <summary>
            Device function PWM16 
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.DeviceFunction.ADC1_CH0">
            <summary>
            ADC1 channel 0
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.DeviceFunction.ADC1_CH1">
            <summary>
            ADC1 channel 1
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.DeviceFunction.ADC1_CH2">
            <summary>
            ADC1 channel 2
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.DeviceFunction.ADC1_CH3">
            <summary>
            ADC1 channel 3
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.DeviceFunction.ADC1_CH4">
            <summary>
            ADC1 channel 4
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.DeviceFunction.ADC1_CH5">
            <summary>
            ADC1 channel 5 
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.DeviceFunction.ADC1_CH6">
            <summary>
            ADC1 channel 6
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.DeviceFunction.ADC1_CH7">
            <summary>
            ADC1 channel 7
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.DeviceFunction.ADC1_CH8">
            <summary>
            ADC1 channel 8
            Internal Temperture sensor (VP)
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.DeviceFunction.ADC1_CH9">
            <summary>
            ADC1 channel 9
            Internal Hall Sensor (VN)
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.DeviceFunction.ADC1_CH10">
            <summary>
            ADC1 channel 10
            Internally ESP32 Adc2 channel 10
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.DeviceFunction.ADC1_CH11">
            <summary>
            ADC1 channel 11
            Internally ESP32 Adc2 channel 11
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.DeviceFunction.ADC1_CH12">
            <summary>
            ADC1 channel 12
            Internally ESP32 Adc2 channel 12
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.DeviceFunction.ADC1_CH13">
            <summary>
            ADC1 channel 13 
            Internally ESP32 Adc2 channel 13
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.DeviceFunction.ADC1_CH14">
            <summary>
            ADC1 channel 14
            Internally ESP32 Adc2 channel 14
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.DeviceFunction.ADC1_CH15">
            <summary>
            ADC1 channel 15
            Internally ESP32 Adc2 channel 15
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.DeviceFunction.ADC1_CH16">
            <summary>
            ADC1 channel 16
            Internally ESP32 Adc2 channel 16
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.DeviceFunction.ADC1_CH17">
            <summary>
            ADC1 channel 17
            Internally ESP32 Adc2 channel 17
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.DeviceFunction.ADC1_CH18">
            <summary>
            ADC1 channel 18
            Internally ESP32 Adc2 channel 18
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.DeviceFunction.ADC1_CH19">
            <summary>
            ADC1 channel 19
            Internally ESP32 Adc2 channel 19
            </summary>
        </member>
        <member name="T:nanoFramework.Hardware.Esp32.EspNativeError">
            <summary>
            Encapsulates the ESP32 native errors
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.EspNativeError.OK">
            <summary>
            No error
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.EspNativeError.FAIL">
            <summary>
            The function failed
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.EspNativeError.NO_MEM">
            <summary>
            Memory allocation failed error
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.EspNativeError.INVALID_ARG">
            <summary>
            Invalid argument error
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.EspNativeError.INVALID_STATE">
            <summary>
            Invalid state error
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.EspNativeError.INVALID_SIZE">
            <summary>
            Invalid size error
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.EspNativeError.NOT_FOUND">
            <summary>
            The function failed
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.EspNativeError.NOT_SUPPORTED">
            <summary>
            Function not supported error 
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.EspNativeError.TIMEOUT">
            <summary>
            Timeout error
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.EspNativeError.INVALID_RESPONSE">
            <summary>
            Invalid response
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.EspNativeError.INVALID_CRC">
            <summary>
            CRC error
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.EspNativeError.INVALID_VERSION">
            <summary>
            Invalid version
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.EspNativeError.INVALID_MAC">
            <summary>
            Invalid MAC address
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.EspNativeError.WIFI_BASE">
            <summary>
            Base of WiFi errors
            </summary>
        </member>
        <member name="T:nanoFramework.Hardware.Esp32.Sleep">
            <summary>
            Encapsulates ESP32 sleep functions
            </summary>
        </member>
        <member name="T:nanoFramework.Hardware.Esp32.Sleep.WakeupMode">
            <summary>
            Wakeup mode used by EnableWakeupByMultiPins
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Sleep.WakeupMode.AllLow">
            <summary>
            Wakeup when all pins are low
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Sleep.WakeupMode.AnyHigh">
            <summary>
            Wakeup when any pin is high
            </summary>
        </member>
        <member name="T:nanoFramework.Hardware.Esp32.Sleep.WakeupCause">
            <summary>
            Sleep wakeup cause
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Sleep.WakeupCause.Undefined">
            <summary>
            In case of deep sleep, reset was not caused by exit from deep sleep
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Sleep.WakeupCause.Ext0">
            <summary>
            Wakeup caused by external signal using RTC_IO
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Sleep.WakeupCause.Ext1">
            <summary>
            Wakeup caused by external signal using RTC_CNTL
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Sleep.WakeupCause.Timer">
            <summary>
            Wakeup caused by timer
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Sleep.WakeupCause.TouchPad">
            <summary>
             Wakeup caused by touchpad
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Sleep.WakeupCause.Ulp">
            <summary>
             Wakeup caused by ULP program
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Sleep.WakeupCause.Gpio">
            <summary>
            Wakeup caused by GPIO (light sleep only)
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Sleep.WakeupCause.Uart">
            <summary>
            Wakeup caused by UART (light sleep only)
            </summary>
        </member>
        <member name="T:nanoFramework.Hardware.Esp32.Sleep.WakeupGpioPin">
            <summary>
            Gpio pins that can be used for wakeup
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Sleep.WakeupGpioPin.None">
            <summary>
            No wake up pin
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Sleep.WakeupGpioPin.Pin0">
            <summary>
            Gpio Pin 1 used for wakeup
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Sleep.WakeupGpioPin.Pin2">
            <summary>
            Gpio Pin 2 used for wakeup
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Sleep.WakeupGpioPin.Pin4">
            <summary>
            Gpio Pin 4 used for wakeup
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Sleep.WakeupGpioPin.Pin12">
            <summary>
            Gpio Pin 12 used for wakeup
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Sleep.WakeupGpioPin.Pin13">
            <summary>
            Gpio Pin 13 used for wakeup
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Sleep.WakeupGpioPin.Pin14">
            <summary>
            Gpio Pin 14 used for wakeup
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Sleep.WakeupGpioPin.Pin15">
            <summary>
            Gpio Pin 15 used for wakeup
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Sleep.WakeupGpioPin.Pin25">
            <summary>
            Gpio Pin 25 used for wakeup
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Sleep.WakeupGpioPin.Pin26">
            <summary>
            Gpio Pin 26 used for wakeup
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Sleep.WakeupGpioPin.Pin27">
            <summary>
            Gpio Pin 27 used for wakeup
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Sleep.WakeupGpioPin.Pin32">
            <summary>
            Gpio Pin 32 used for wakeup
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Sleep.WakeupGpioPin.Pin33">
            <summary>
            Gpio Pin 33 used for wakeup
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Sleep.WakeupGpioPin.Pin34">
            <summary>
            Gpio Pin 34 used for wakeup
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Sleep.WakeupGpioPin.Pin35">
            <summary>
            Gpio Pin 35 used for wakeup
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Sleep.WakeupGpioPin.Pin36">
            <summary>
            Gpio Pin 36 used for wakeup
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Sleep.WakeupGpioPin.Pin37">
            <summary>
            Gpio Pin 37 used for wakeup
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Sleep.WakeupGpioPin.Pin38">
            <summary>
            Gpio Pin 38 used for wakeup
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Sleep.WakeupGpioPin.Pin39">
            <summary>
            Gpio Pin 39 used for wakeup
            </summary>
        </member>
        <member name="T:nanoFramework.Hardware.Esp32.Sleep.TouchPad">
            <summary>
            Enumeration of Touch pad numbers
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Sleep.TouchPad.Num0">
            <summary>
             Touch pad channel 0 is GPIO4
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Sleep.TouchPad.Num1">
            <summary>
            Touch pad channel 1 is GPIO0
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Sleep.TouchPad.Num2">
            <summary>
            Touch pad channel 2 is GPIO2
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Sleep.TouchPad.Num3">
            <summary>
            Touch pad channel 3 is GPIO15
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Sleep.TouchPad.Num4">
            <summary>
            Touch pad channel 4 is GPIO13
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Sleep.TouchPad.Num5">
            <summary>
            Touch pad channel 5 is GPIO12
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Sleep.TouchPad.Num6">
            <summary>
            Touch pad channel 6 is GPIO14
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Sleep.TouchPad.Num7">
            <summary>
            Touch pad channel 7 is GPIO27
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Sleep.TouchPad.Num8">
            <summary>
            Touch pad channel 8 is GPIO33
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Sleep.TouchPad.Num9">
            <summary>
            Touch pad channel 9 is GPIO32
            </summary>
        </member>
        <member name="F:nanoFramework.Hardware.Esp32.Sleep.TouchPad.None">
            <summary>
            Number returned when no touch pad used on wakeup 
            </summary>
        </member>
        <member name="M:nanoFramework.Hardware.Esp32.Sleep.EnableWakeupByTimer(System.TimeSpan)">
            <summary>
            Enable Wakeup by Timer
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:nanoFramework.Hardware.Esp32.Sleep.EnableWakeupByPin(nanoFramework.Hardware.Esp32.Sleep.WakeupGpioPin,System.Int32)">
            <summary>
            Enable wakeup using a gpio pin
            </summary>
            <param name="pin">GPIO number used as wakeup source.  Only pins that have RTC functionality can be used.
            0,2,4,12->15,25->27,32->39</param>
            <param name="level"></param>
            <returns></returns>
        </member>
        <member name="M:nanoFramework.Hardware.Esp32.Sleep.EnableWakeupByMultiPins(nanoFramework.Hardware.Esp32.Sleep.WakeupGpioPin,nanoFramework.Hardware.Esp32.Sleep.WakeupMode)">
            <summary>
            Enable Wkaup using multiple pins.
            </summary>
            <remarks>
            Only pins that are RTC connected. 
            </remarks>
            <param name="pins"></param>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:nanoFramework.Hardware.Esp32.Sleep.EnableWakeupByTouchPad">
            <summary>
            Enable wakeup by Touchpad
            </summary>
            <returns></returns>
        </member>
        <member name="M:nanoFramework.Hardware.Esp32.Sleep.StartLightSleep">
            <summary>
            Enter light sleep with the configured wakeup options. 
            </summary>
            <returns>Return ESP_ERR_INVALID_STATE if Wifi or BT not stopped.</returns>
        </member>
        <member name="M:nanoFramework.Hardware.Esp32.Sleep.StartDeepSleep">
            <summary>
            Enter deep sleep using configured wakeup sources. 
            </summary>
            <remarks>
            If no wakeup sources configured then it will be a indefinite sleep.
            This call never returns.
            After the device enters deep sleep a wakeup source will wake the device and the execution will start as if it was a reset.
            Keep in mind that the execution WILL NOT continue after the call to this method.
            </remarks>
        </member>
        <member name="M:nanoFramework.Hardware.Esp32.Sleep.GetWakeupCause">
            <summary>
            Get the cause for waking up
            </summary>
            <returns>Return the Wakeup cause.</returns>
        </member>
        <member name="M:nanoFramework.Hardware.Esp32.Sleep.GetWakeupGpioPin">
            <summary>
            Returns a bit mask of pins taht caused the wakeup
            </summary>
            <returns></returns>
        </member>
        <member name="M:nanoFramework.Hardware.Esp32.Sleep.GetWakeupTouchpad">
            <summary>
            Get the touch pad which caused wakeup. 
            </summary>
            <returns>Return TouchPad number or None</returns>
        </member>
    </members>
</doc>
